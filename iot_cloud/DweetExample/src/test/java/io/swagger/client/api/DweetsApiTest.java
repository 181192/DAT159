/*
 * dweet.io
 * Dweet.io allows users to share data from mobile, tablets, and pcs, and them to other devices and accounts across social media platforms. Dweet.io provides an API to access the different functionality of the Dweet.io service. Users can make REST calls to read and create dweets, lock and unlock things, and perform other calls. The API returns JSON and JSONP.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DweetsApi
 */
@Ignore
public class DweetsApiTest {

    private final DweetsApi api = new DweetsApi();

    
    /**
     * Create a dweet for a thing.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dweetForThingPostTest() throws ApiException {
        String thing = null;
        String content = null;
        String key = null;
        api.dweetForThingPost(thing, content, key);

        // TODO: test validations
    }
    
    /**
     * Create a dweet for a thing.  This method differs from /dweet/for/{thing} only in that successful dweets result in an HTTP 204 response rather than the typical verbose response.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void dweetQuietlyForThingPostTest() throws ApiException {
        String thing = null;
        String content = null;
        String key = null;
        api.dweetQuietlyForThingPost(thing, content, key);

        // TODO: test validations
    }
    
    /**
     * Read the last 5 cached dweets for a thing.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDweetsForThingGetTest() throws ApiException {
        String thing = null;
        String key = null;
        api.getDweetsForThingGet(thing, key);

        // TODO: test validations
    }
    
    /**
     * Read the latest dweet for a thing.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLatestDweetTest() throws ApiException {
        String thing = null;
        String key = null;
        api.getLatestDweet(thing, key);

        // TODO: test validations
    }
    
    /**
     * Listen for dweets from a thing.
     *
     * Sorry, this function uses HTTP chunked responses and cannot be tested here. Try something like: &lt;pre&gt;curl --raw https://dweet.io/listen/for/dweets/from/{thing}&lt;/pre&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listenForDweetsTest() throws ApiException {
        String thing = null;
        api.listenForDweets(thing);

        // TODO: test validations
    }
    
}
